generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user") // 'admin' or 'user'
  orders    Order[]
  reviews   Review[]
  createdAt DateTime @default(now())
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  description   String
  price         Int
  imageUrl      String
  categoryId    Int
  category      Category  @relation(fields: [categoryId], references: [id])
  reviews       Review[]
  orderItems    OrderItem[]  
  createdAt     DateTime  @default(now())
  searchVector  Unsupported("tsvector")?
}


model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  total      Int
  status     String      @default("pending")
  createdAt  DateTime    @default(now())
  items      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Int
}

model Review {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  rating     Int
  comment    String
  imageUrl   String?     // Optional image
  isApproved Boolean     @default(false)
  createdAt  DateTime    @default(now())
}


enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}
